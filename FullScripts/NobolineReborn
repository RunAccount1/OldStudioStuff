-- garbage script I made a few months ago XD

repeat task.wait() until game:IsLoaded()

local debugmode = false

local modes = {
	["Dash"] = true,
	["Brackets"] = false,
	["None"] = false,
}

local ts = game.TweenService

local logogui2 = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui)
logogui2.ResetOnSpawn = false
logogui2.IgnoreGuiInset = true
logogui2.Archivable = true

local framenew = Instance.new("Frame", logogui2)
framenew.Position = UDim2.fromScale(0.74, .35)
framenew.Size = UDim2.fromScale(.15, .6)
framenew.BackgroundTransparency = 1
framenew.Active = true
framenew.Draggable = true

local listlay = Instance.new("UIListLayout", framenew)
listlay.SortOrder = Enum.SortOrder.Name
listlay.VerticalAlignment = Enum.VerticalAlignment.Bottom
listlay.HorizontalAlignment = Enum.HorizontalAlignment.Right

local array = {
	addnewArray = function(v, v2, v3)
		local labnew = Instance.new("TextLabel", framenew)
		labnew.Position = UDim2.fromScale(0, 0)
		labnew.Size = UDim2.fromScale(.1, .07)
		labnew.Font = v3
		if v2 then
			if v2 == "" then
				labnew.Text = v
			else
				if modes.Dash == true then
					labnew.Text = v.." - "..v2
				elseif modes.Brackets == true then
					labnew.Text = v.." { "..v2.." }"
				elseif modes.None == true then
					labnew.Text = v.." "..v2
				end
			end
		else
			labnew.Text = v
		end
		labnew.BackgroundTransparency = 1
		labnew.TextColor3 = Color3.fromRGB(255, 255, 255)
		labnew.TextSize = 20
		labnew.Name = v
		spawn(function()
			repeat
				local twn1 = ts:Create(labnew, TweenInfo.new(.31), {TextColor3 = Color3.fromRGB(150,150,255)})
				twn1:Play()
				task.wait(.25)
				local twn2 = ts:Create(labnew, TweenInfo.new(.35), {TextColor3 = Color3.fromRGB(255,255,255)})
				twn2:Play()
				task.wait(.25)
			until false
		end)
	end,
	removeArray = function(v1)
		if framenew:FindFirstChild(v1) then
			framenew[v1]:Remove()
		end
	end,
	findArray = function(v1)
		if framenew:FindFirstChild(v1) then
			return true
		end
		return false
	end,
}

local knitRecieved, knit
knitRecieved, knit = pcall(function()
	repeat task.wait()
		return debug.getupvalue(require(game.Players.LocalPlayer.PlayerScripts.TS.knit).setup, 6)
	until knitRecieved
end)

local events = {
	HangGliderController = knit.Controllers["HangGliderController"],
	SprintController = knit.Controllers["SprintController"],
	JadeHammerController = knit.Controllers["JadeHammerController"],
	PictureModeController = knit.Controllers["PictureModeController"],
	SwordController = knit.Controllers["SwordController"],
	GroundHit = game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.GroundHit,
	Reach = require(game:GetService("ReplicatedStorage").TS.combat["combat-constant"]),
	Knockback = debug.getupvalue(require(game:GetService("ReplicatedStorage").TS.damage["knockback-util"]).KnockbackUtil.calculateKnockbackVelocity, 1),
	report = knit.Controllers["report-controller"],
	PlacementCPS = require(game.ReplicatedStorage.TS["shared-constants"]).CpsConstants,
	SwordHit = game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.SwordHit,
}

local plrs = game.Players
local lplr = plrs.LocalPlayer

function notification(v1, v2)
	game:GetService("StarterGui"):SetCore("SendNotification",{
		Title = v1,
		Text = v2,
	})
end
function runfunc(v)
	spawn(function()
		pcall(function()
			v()
		end)
	end)
end

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Noboline Reborn 1.0.0", "Ocean")

local Combat = Window:NewTab("Combat")
local Movement = Window:NewTab("Movement")
local Visuals = Window:NewTab("Visuals")
local Mechanics = Window:NewTab("Mechanics")

local CombatSection = Combat:NewSection("Main")
local MovementSection = Movement:NewSection("Main")
local VisualsSection = Visuals:NewSection("Main")
local MechanicsSection = Mechanics:NewSection("Main")

local viewmodel = workspace.Camera.Viewmodel.RightHand.RightWrist
local weld = viewmodel.C0
local oldweld = viewmodel.C0

local TweenService = game.TweenService
local inventory = workspace[lplr.Name].InventoryFolder.Value

game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
	repeat task.wait(1) until char ~= nil
	task.wait(1)
	inventory = workspace[lplr.Name].InventoryFolder.Value
	viewmodel = workspace.Camera.Viewmodel.RightHand.RightWrist
end)

local weaponMeta = {
	{"rageblade", 100},
	{"emerald_sword", 99},
	{"deathbloom", 99},
	{"glitch_void_sword", 98},
	{"sky_scythe", 98},
	{"diamond_sword", 97}, 
	{"iron_sword", 96},
	{"stone_sword", 95},
	{"wood_sword", 94},
	{"emerald_dao", 93},
	{"diamond_dao", 99},
	{"diamond_dagger", 99},
	{"diamond_great_hammer", 99},
	{"diamond_scythe", 99},
	{"iron_dao", 97},
	{"iron_scythe", 97},
	{"iron_dagger", 97},
	{"iron_great_hammer", 97},
	{"stone_dao", 96},
	{"stone_dagger", 96},
	{"stone_great_hammer", 96},
	{"stone_scythe", 96},
	{"wood_dao", 95},
	{"wood_scythe", 95},
	{"wood_great_hammer", 95},
	{"wood_dagger", 95},
	{"frosty_hammer", 1},
}

local function hasItem(item)
	if inventory:FindFirstChild(item) then
		return true, 1
	end
	return false
end

local function getBestWeapon()
	local bestSword
	local bestSwordMeta = 0
	for i, sword in ipairs(weaponMeta) do
		local name = sword[1]
		local meta = sword[2]
		if meta > bestSwordMeta and hasItem(name) then
			bestSword = name
			bestSwordMeta = meta
		end
	end
	return inventory:FindFirstChild(bestSword)
end

local function getRemote(name)
	local remote
	for i,v in pairs(game:GetDescendants()) do
		if v.Name == name then
			remote = v
			break
		end
	end
	return remote
end


local auraremo = getRemote("SwordHit")
runfunc(function()

	local animations = {
		["Swang"] = {
			{CFrame = CFrame.new(0.69, -0.7, 0.1) * CFrame.Angles(math.rad(-65), math.rad(55), math.rad(-51)), Timer = 0.15},
			{CFrame = CFrame.new(0.16, -1.16, 0.5) * CFrame.Angles(math.rad(-179), math.rad(94), math.rad(33)), Timer = 0.2},
		},
		["Vanilla"] = {
			{CFrame = CFrame.new(0.69, -0.8, 0.1) * CFrame.Angles(math.rad(-70), math.rad(60), math.rad(-51)), Timer = 0.2}
		},
		["Swoosh"] = {
			{CFrame = CFrame.new(0.69, -0.7, 0.1) * CFrame.Angles(math.rad(-80), math.rad(55), math.rad(-51)), Timer = 0.1},
			{CFrame = CFrame.new(0.16, -1.16, 0.5) * CFrame.Angles(math.rad(-179), math.rad(94), math.rad(33)), Timer = 0.16},
		},
	}
	local animselectd = "Swoosh"
	local auracon
	local animRunning = true
	local aura = CombatSection:NewToggle("Kill Aura", "lol", function(state)
		if state then
			auracon = game["Run Service"].Heartbeat:Connect(function()
				for i,v in pairs(game.Players:GetPlayers()) do
					if v ~= game.Players.LocalPlayer then
						if v.Character.Humanoid.Health ~= 0 then
							if (v.Character.PrimaryPart.Position - game.Players.LocalPlayer.Character.PrimaryPart.Position).Magnitude < 20 then
								if v.Team ~= game.Players.LocalPlayer.Team then
									if game.Players.LocalPlayer.Character.Humanoid.Health ~= 0 then
										spawn(function()
											pcall(function()
												local allTime = 0
												task.spawn(function()
													local animationplay = animations[animselectd]
													animRunning = true
													for i,v in pairs(animationplay) do allTime += v.Timer end
													for i,v in pairs(animationplay) do
														local tween = game.TweenService:Create(viewmodel,TweenInfo.new(v.Timer),{C0 = oldweld * v.CFrame})
														tween:Play()
														task.wait(v.Timer + .4)
													end
													animRunning = false
													game.TweenService:Create(viewmodel,TweenInfo.new(1),{C0 = oldweld}):Play()
												end)
												task.wait(allTime)
											end)
										end)
										events.SwordHit:FireServer({
											["chargedAttack"] = {
												["chargeRatio"] = 0.8
											},
											["entityInstance"] = v.Character,
											["validate"] = {
												["targetPosition"] = {
													["value"] = v.Character.PrimaryPart.Position
												},
												["selfPosition"] = {
													["value"] = game.Players.LocalPlayer.Character.PrimaryPart.Position
												}
											},
											["weapon"] = getBestWeapon()
										})
									end
								end
							end
						end
					end
				end
			end)
		else
			auracon:Disconnect()
		end
	end)

	local auraanimselect = CombatSection:NewDropdown("Aura Animation", "lol", {"Vanilla", "Swang", "Swoosh"}, function(currentOption)
		animselectd = currentOption
		print(animselectd)
	end)

end)

runfunc(function()
	local sprintcon
	local sprintcntrler = events.SprintController
	local sprint = CombatSection:NewToggle("Sprint", "lol", function(state)
		if state then
			array.addnewArray("Sprint", "", Enum.Font.Code)
			sprintcon = game["Run Service"].Heartbeat:Connect(function()
				if not sprintcntrler.issprinting then
					sprintcntrler:startSprinting()
				end
			end)
		else
			sprintcon:Disconnect()
		end
	end)
end)

runfunc(function()
	local velocity = CombatSection:NewToggle("Velocity", "lol", function(state)
		if state then
			array.addnewArray("Velocity", "", Enum.Font.Code)
			events.Knockback.kbUpwardStrength = 0
			events.Knockback.kbDirectionStrength = 0
		else
			events.Knockback.kbUpwardStrength = 100
			events.Knockback.kbDirectionStrength = 100
		end
	end)
end)

runfunc(function()
	local speedcon
	local speed = MovementSection:NewToggle("Speed", "speeeds up", function(state)
		if state then
			array.addnewArray("Speed", "23.4", Enum.Font.Code)
			speedcon = game["Run Service"].Heartbeat:Connect(function()
				lplr.Character.Humanoid.WalkSpeed = 23.4
			end)
		else
			speedcon:Disconnect()
		end
	end)
end)

runfunc(function()
	local enabled = false
	
	function f()
		enabled = not enabled
		if enabled then
			array.addnewArray("Flight", "", Enum.Font.Code)
		else
			array.removeArray("Flight")
		end
		repeat
			task.wait()
			lplr.Character.PrimaryPart.Velocity = Vector3.new(lplr.Character.PrimaryPart.Velocity.X,1.9,lplr.Character.PrimaryPart.Velocity.Z)
		until (not enabled)
	end

	local flight = MovementSection:NewKeybind("Flight", "bypi", Enum.KeyCode.R, function()
		f()
	end)
end)

runfunc(function()
	local enabled = false
	
	function ff()
		enabled = not enabled
		if enabled then
			lplr.Character.PrimaryPart.CFrame += Vector3.new(0, 20, 0)
		end
		if enabled then
			array.addnewArray("FunnyFlight", "", Enum.Font.Code)
		else
			array.removeArray("FunnyFlight")
		end
		spawn(function()
			workspace.Gravity = 100
			repeat
				lplr.Character.PrimaryPart.Velocity = Vector3.new(lplr.Character.PrimaryPart.Velocity.X,0,lplr.Character.PrimaryPart.Velocity.Z)
				task.wait(.1)
			until (not enabled)
			workspace.Gravity = 192.6
		end)
	end

	local funnyflight = MovementSection:NewKeybind("FunnyFlight", "bypi", Enum.KeyCode.V, function()
		ff()
	end) 
end)

runfunc(function()
	local enabled = false
	local oldpos = lplr.Character.PrimaryPart.CFrame

	spawn(function()
		repeat
			oldpos = lplr.Character.PrimaryPart.CFrame
			if debugmode then
				--notification("Noboline Reborn", "saved position - debug mode enabled")
				print("Noboline Reborn - saved position - debug mode enabled")
			end
			task.wait(2)
		until false
	end)

	function lagback()
		lplr.Character.PrimaryPart.CFrame = oldpos
		notification("Noboline Reborn", "Teleported.")
		if debugmode then
			notification("Noboline Reborn", "Teleported successful - debug mode enabled")
		end
	end

	local lagbackm = MechanicsSection:NewKeybind("ForceLagback", "bypi", Enum.KeyCode.X, function()
		lagback()
		spawn(function()
			array.addnewArray("ForceLagback", "CFrame", Enum.Font.Code)
			task.wait(1)
			array.removeArray("ForceLagback")
		end)
	end)
end)

runfunc(function()
	local enabled = false
	local lj
	local starting_Pos
	
	lj = function()
		array.addnewArray("LongJump", "Test", Enum.Font.Code)
		starting_Pos = lplr.Character.PrimaryPart.CFrame
		for i = 1, 100 do
			lplr.Character.PrimaryPart.CFrame = starting_Pos
			task.wait()
		end
		spawn(function()
			for i = 1, 3 do
				lplr.Character.PrimaryPart.CFrame += lplr.Character.PrimaryPart.CFrame.LookVector * 1
				task.wait(.5)
			end
		end)
		workspace.Gravity = 130
		for i = 1, 3 do
			lplr.Character.PrimaryPart.Velocity = Vector3.new(lplr.Character.PrimaryPart.Velocity.X, 38, lplr.Character.PrimaryPart.Velocity.Z)
			task.wait(.5)
		end
		workspace.Gravity = 192.6
		array.removeArray("LongJump")
	end

	local Longjump = MovementSection:NewKeybind("LongJump", "bypi", Enum.KeyCode.J, function()
		lj()
	end)
end)

runfunc(function()
	local antivoidrun
	local enabled = false
	local oldpos = lplr.Character.PrimaryPart.CFrame
	spawn(function()
		repeat
			if lplr.Character.Humanoid.FloorMaterial ~= Enum.Material.Air then
				oldpos = lplr.Character.PrimaryPart.CFrame
			end
			if debugmode then
				--notification("Noboline Reborn", "saved position - debug mode enabled")
				print("Noboline Reborn - saved position - debug mode enabled")
			end
			task.wait(.1)
		until false
	end)
	function lagback2()
		lplr.Character.PrimaryPart.CFrame = oldpos
		lplr.Character.PrimaryPart.Velocity = Vector3.new(0,0,0)
		notification("Noboline Reborn", "Teleported.")
		if debugmode then
			notification("Noboline Reborn", "Teleported successful - debug mode enabled")
		end
	end

	local antivoid = MovementSection:NewToggle("AntiVoid", "lol", function(state)
		if state then
			array.addnewArray("AntiVoid", "CFrame", Enum.Font.Code)
			antivoidrun = game["Run Service"].Heartbeat:Connect(function()
				pcall(function()
					if lplr.Character.PrimaryPart.Position.Y < 0 then
						lagback2()
					end
				end)
			end)
		else
			antivoidrun:Disconnect()
			array.removeArray("AntiVoid")
		end
	end)
end)

runfunc(function()
	local nofallrun
	local nofall = MovementSection:NewToggle("NoFallDamage", "lol", function(state)
		if state then
			array.addnewArray("NoFallDamage", "Remote", Enum.Font.Code)
			nofallrun = game["Run Service"].Heartbeat:Connect(function()
				events.GroundHit:FireServer()
			end)
		else
			nofallrun:Disconnect()
		end
	end)
end)

runfunc(function()
	local guienabled = false
	VisualsSection:NewKeybind("Toggle Ui", "lol", Enum.KeyCode.Delete, function()
		Library:ToggleUI()
		if guienabled then
			if array.findArray("ClickGui") then return end
			array.addnewArray("ClickGui", "Kavo", Enum.Font.Code)
		else
			array.removeArray("ClickGui")
		end
		guienabled = not guienabled
	end)
end)
